#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
# Source0 file verified with key 0xC36CDCB4DF00C68C (infra-root@openstack.org)
#
Name     : heat
Version  : 8.0.7
Release  : 38
URL      : http://tarballs.openstack.org/heat/heat-8.0.7.tar.gz
Source0  : http://tarballs.openstack.org/heat/heat-8.0.7.tar.gz
Source1  : heat-api-cfn.service
Source2  : heat-api.service
Source3  : heat-engine.service
Source4  : heat.tmpfiles
Source5  : http://tarballs.openstack.org/heat/heat-8.0.7.tar.gz.asc
Summary  : OpenStack Orchestration
Group    : Development/Tools
License  : Apache-2.0
Requires: heat-bin = %{version}-%{release}
Requires: heat-config = %{version}-%{release}
Requires: heat-data = %{version}-%{release}
Requires: heat-license = %{version}-%{release}
Requires: heat-python = %{version}-%{release}
Requires: heat-python3 = %{version}-%{release}
Requires: heat-services = %{version}-%{release}
Requires: Babel
Requires: PasteDeploy
Requires: PyYAML
Requires: Routes
Requires: SQLAlchemy
Requires: WebOb
Requires: cryptography
Requires: debtcollector
Requires: docker-py
Requires: eventlet
Requires: keystoneauth1
Requires: keystonemiddleware
Requires: lxml
Requires: netaddr
Requires: oslo.cache
Requires: oslo.concurrency
Requires: oslo.config
Requires: oslo.context
Requires: oslo.db
Requires: oslo.i18n
Requires: oslo.log
Requires: oslo.messaging
Requires: oslo.middleware
Requires: oslo.policy
Requires: oslo.reports
Requires: oslo.serialization
Requires: oslo.service
Requires: oslo.utils
Requires: oslo.versionedobjects
Requires: osprofiler
Requires: pbr
Requires: pycrypto
Requires: python-barbicanclient
Requires: python-ceilometerclient
Requires: python-cinderclient
Requires: python-designateclient
Requires: python-glanceclient
Requires: python-heatclient
Requires: python-keystoneclient
Requires: python-magnumclient
Requires: python-manilaclient
Requires: python-mistralclient
Requires: python-neutronclient
Requires: python-novaclient
Requires: python-openstackclient
Requires: python-saharaclient
Requires: python-senlinclient
Requires: python-swiftclient
Requires: python-troveclient
Requires: python-zaqarclient
Requires: pytz
Requires: requests
Requires: six
Requires: sqlalchemy-migrate
Requires: stevedore
Requires: tenacity
BuildRequires : Babel
BuildRequires : PasteDeploy
BuildRequires : PyYAML
BuildRequires : Routes
BuildRequires : SQLAlchemy
BuildRequires : WebOb
BuildRequires : buildreq-distutils3
BuildRequires : cryptography
BuildRequires : debtcollector
BuildRequires : docker-py
BuildRequires : eventlet
BuildRequires : keystoneauth1
BuildRequires : keystonemiddleware
BuildRequires : lxml
BuildRequires : netaddr
BuildRequires : oslo.cache
BuildRequires : oslo.concurrency
BuildRequires : oslo.config
BuildRequires : oslo.context
BuildRequires : oslo.db
BuildRequires : oslo.i18n
BuildRequires : oslo.log
BuildRequires : oslo.messaging
BuildRequires : oslo.middleware
BuildRequires : oslo.policy
BuildRequires : oslo.reports
BuildRequires : oslo.serialization
BuildRequires : oslo.service
BuildRequires : oslo.utils
BuildRequires : oslo.versionedobjects
BuildRequires : osprofiler
BuildRequires : pbr
BuildRequires : pycrypto
BuildRequires : python-barbicanclient
BuildRequires : python-ceilometerclient
BuildRequires : python-cinderclient
BuildRequires : python-designateclient
BuildRequires : python-glanceclient
BuildRequires : python-heatclient
BuildRequires : python-keystoneclient
BuildRequires : python-magnumclient
BuildRequires : python-manilaclient
BuildRequires : python-mistralclient
BuildRequires : python-neutronclient
BuildRequires : python-novaclient
BuildRequires : python-openstackclient
BuildRequires : python-saharaclient
BuildRequires : python-senlinclient
BuildRequires : python-swiftclient
BuildRequires : python-troveclient
BuildRequires : python-zaqarclient
BuildRequires : pytz
BuildRequires : requests
BuildRequires : six
BuildRequires : sqlalchemy-migrate
BuildRequires : stevedore
BuildRequires : tenacity
Patch1: 0001-default-config.patch

%description
This directory contains rally benchmark scenarios to be run by OpenStack CI.
Structure:
* heat.yaml is rally task that will be run in gates
* plugins - directory where you can add rally plugins. So you don't need
to merge benchmark in scenarios in rally to be able to run them in heat.
* extra - all files from this directory will be copied to gates, so you will
be able to use absolute path in rally tasks. Files will be in ~/.rally/extra/*

%package bin
Summary: bin components for the heat package.
Group: Binaries
Requires: heat-data = %{version}-%{release}
Requires: heat-config = %{version}-%{release}
Requires: heat-license = %{version}-%{release}
Requires: heat-services = %{version}-%{release}

%description bin
bin components for the heat package.


%package config
Summary: config components for the heat package.
Group: Default

%description config
config components for the heat package.


%package data
Summary: data components for the heat package.
Group: Data

%description data
data components for the heat package.


%package license
Summary: license components for the heat package.
Group: Default

%description license
license components for the heat package.


%package python
Summary: python components for the heat package.
Group: Default
Requires: heat-python3 = %{version}-%{release}

%description python
python components for the heat package.


%package python3
Summary: python3 components for the heat package.
Group: Default
Requires: python3-core

%description python3
python3 components for the heat package.


%package services
Summary: services components for the heat package.
Group: Systemd services

%description services
services components for the heat package.


%prep
%setup -q -n heat-8.0.7
cd %{_builddir}/heat-8.0.7
%patch1 -p1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582934712
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/heat
cp %{_builddir}/heat-8.0.7/LICENSE %{buildroot}/usr/share/package-licenses/heat/294b43b2cec9919063be1a3b49e8722648424779
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----
mkdir -p %{buildroot}/usr/lib/systemd/system
install -m 0644 %{SOURCE1} %{buildroot}/usr/lib/systemd/system/heat-api-cfn.service
install -m 0644 %{SOURCE2} %{buildroot}/usr/lib/systemd/system/heat-api.service
install -m 0644 %{SOURCE3} %{buildroot}/usr/lib/systemd/system/heat-engine.service
mkdir -p %{buildroot}/usr/lib/tmpfiles.d
install -m 0644 %{SOURCE4} %{buildroot}/usr/lib/tmpfiles.d/heat.conf
## install_append content
install -d -m 755 %{buildroot}/usr/share/defaults/heat
install -p -D -m 644 etc/heat/*.ini %{buildroot}/usr/share/defaults/heat/
install -p -D -m 644 etc/heat/*.json %{buildroot}/usr/share/defaults/heat/
install -p -D -m 644 etc/heat/heat.conf.sample %{buildroot}/usr/share/defaults/heat/heat.conf
## install_append end

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/heat-all
/usr/bin/heat-api
/usr/bin/heat-api-cfn
/usr/bin/heat-api-cloudwatch
/usr/bin/heat-db-setup
/usr/bin/heat-engine
/usr/bin/heat-keystone-setup
/usr/bin/heat-keystone-setup-domain
/usr/bin/heat-manage
/usr/bin/heat-wsgi-api
/usr/bin/heat-wsgi-api-cfn
/usr/bin/heat-wsgi-api-cloudwatch

%files config
%defattr(-,root,root,-)
/usr/lib/tmpfiles.d/heat.conf

%files data
%defattr(-,root,root,-)
/usr/share/defaults/heat/api-paste.ini
/usr/share/defaults/heat/heat.conf
/usr/share/defaults/heat/policy.json

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/heat/294b43b2cec9919063be1a3b49e8722648424779

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*

%files services
%defattr(-,root,root,-)
/usr/lib/systemd/system/heat-api-cfn.service
/usr/lib/systemd/system/heat-api.service
/usr/lib/systemd/system/heat-engine.service
